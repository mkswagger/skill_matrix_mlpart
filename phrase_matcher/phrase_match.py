# -*- coding: utf-8 -*-
"""phrase_match.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1use9VUVHFx8K304rWL-VfbXr5a51CxZf
"""

import os
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB

# Collect and preprocess data
data = []
labels = []
path = '/content/drive/MyDrive/resume_parser/pt2'
keywords = [['backend', 'python', 'django', 'flask', 'sql', 'rest api', 'aws', 'docker'],
            ['frontend', 'html', 'css', 'javascript', 'react', 'angular', 'vue', 'bootstrap'],
            ['machine learning', 'python', 'tensorflow', 'pytorch', 'scikit-learn', 'data analysis', 'natural language processing', 'computer vision']]


for filename in os.listdir(path):
    with open(os.path.join(path, filename), 'rb') as f:
        text = f.read().decode('utf-8', errors='ignore')
        text = text.lower()
        text = ''.join(e for e in text if e.isalnum() or e.isspace())
        data.append(text)
        label = -1
        for i, keyword_list in enumerate(keywords):
            for keyword in keyword_list:
                if keyword in text:
                    label = i
                    break
            if label != -1:
                break
        labels.append(label)

# Train the model
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(data)
clf = MultinomialNB()
clf.fit(X, labels)

# Test the model
test_data = ['some text containing the backend keyword']
test_X = vectorizer.transform(test_data)
prediction = clf.predict(test_X)
print(keywords[prediction[0]])

# Use the model
search_data = ['typescript']
search_X = vectorizer.transform(search_data)
search_prediction = clf.predict(search_X)
results = [filename for i, filename in enumerate(os.listdir(path)) if i == search_prediction[0] and search_prediction[0] != -1]
print(results)

import locale
# print(locale.getpreferredencoding())
def getpreferredencoding(do_setlocale = True):
    return "UTF-8"
locale.getpreferredencoding = getpreferredencoding

from google.colab import drive
drive.mount('/content/drive')